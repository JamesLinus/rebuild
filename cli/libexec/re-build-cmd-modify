#!/bin/bash

rebuild_prefix=`dirname $BASH_SOURCE`/../
. $rebuild_prefix/libexec/re-build-globals

function show_usage
{
    echo
    echo "Usage:"
    echo
    echo "  $rebuild_app_name modify [OPTIONS] ENVIRONMENT[:TAG]"
    echo
    echo "      Interactive mode: opens shell in the specified enviroment"
    echo
    echo "  $rebuild_app_name modify [OPTIONS] ENVIRONMENT[:TAG] -- COMMANDS"
    echo
    echo "      Scripting mode: runs COMMANDS in the specified environment"
    echo
    echo Modify a local environment
    echo
    echo "  -h, --help          Print usage"
    echo
}

function run_cont_raw
{
    local CONT_NAME=$1
    local ENV_NAME=$2
    local ENV_TAG=$3
    local CMD="$4"
    local TTY_PARAM=

    if [[ -t 0 ]]; then
        TTY_PARAM=-t
    fi

    docker run                                                    \
           -i $TTY_PARAM                                          \
           --name $CONT_NAME                                      \
           --hostname `rebuild_cont_hostname $NAME $TAG M` \
           `rebuild_cont_run_settings`                            \
           $ENV_NAME:$ENV_TAG                                     \
           "$CMD"
}

function run_cont
{
    local NAME=$1
    local TAG=$2
    local CMD="$3"

    report_progress_end

    run_cont_raw \
        `rebuild_dirty_cont_name $NAME $TAG` \
        `rebuild_env_name $NAME` \
        $TAG \
        "$CMD"
}

function rerun_cont
{
    local NAME=$1
    local TAG=$2
    local CMD="$3"

    local OLD_RERUN_ID=`rebuild_rerun_image_id $NAME $TAG`

    report_progress_tick

    rebuild_commit `rebuild_dirty_cont_name $NAME $TAG` \
                   `rebuild_env_rerun_name $NAME $TAG`:$rebuild_initial_tag

    report_progress_tick

    rebuild_cont_kill $NAME $TAG

    #Remove old re-run image in case it became dangling
    if [[ -n "$OLD_RERUN_ID" ]]; then
        rebuild_delete_image_if_dangling $OLD_RERUN_ID
    fi

    report_progress_end

    run_cont_raw \
        `rebuild_dirty_cont_name $NAME $TAG` \
        `rebuild_env_rerun_name $NAME $TAG` \
        $rebuild_initial_tag \
        "$CMD"
}

args=$(getopt -l "help" -o "h" -- "$@")

eval set -- "$args"

while [ $# -ge 1 ]; do
    case "$1" in
        --)
            # No more options left.
            shift
            break
           ;;
        -h|--help)
            show_usage
            exit 0
            ;;
    esac

    shift
done

env_name=`rebuild_cmd_line_env_name $*`
env_tag=`rebuild_cmd_line_env_tag $*`

if [[ -z $env_name ]]; then
    handle_error "Environment name not specified"
fi

shift

rebuild_verify_env_exists $env_name $env_tag

report_progress_start "Initializing environment"

if ! rebuild_env_dirty $env_name $env_tag; then
    run_cont $env_name $env_tag "$*"
else
    rerun_cont $env_name $env_tag "$*"
fi
